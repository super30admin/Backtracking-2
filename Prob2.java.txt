class Solution {
    
    List<List<String>> partitions  = new ArrayList<>();
    
    public List<List<String>> partition(String s) {
        
        if( s == null || s.length() == 0)
            return null;
        
        helper(s,new ArrayList<>());
        return partitions;
    }
    
    private void helper(String s,List<String> path){
        
        if(s == "")
            partitions.add(new ArrayList<>(path));
        
        for(int i=0;i<s.length();i++){
            String curr = s.substring(0,i+1);
            String rest = s.substring(i+1,s.length());
            if(checkIfPalindrome(curr)){
                path.add(curr);
                helper(rest,path);
                path.remove(path.size()-1);
            }
        }
    }
    
    private boolean checkIfPalindrome(String s){
        int i=0,j=s.length()-1;
        
        while(i < j){
            if(s.charAt(i++) != s.charAt(j--))
                return false;
            
        }
        return true;
    }
}
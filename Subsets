// Time 2^n

class Solution { List<List<Integer>> result;
    public List<List<Integer>> subsets(int[] nums) {
        result = new ArrayList<>();
        
        helper(nums, 0, new ArrayList<Integer>());
        
        return result;
    }
                
    private void helper(int [] nums, int index, ArrayList<Integer> path)
    {    
        if(index==nums.length)
        {   result.add(new ArrayList<Integer>(path));
            return;
        }
        
      
        
        helper(nums,index+1,path);
        path.add(nums[index]);
        helper(nums,index+1, path);
        path.remove(path.size()-1);
        
        
    }
}
/**
Time Complexity - 2 ^N
Space Complexity - O(N)
 */
class Solution {

    List<List<Integer>> results;
    public List<List<Integer>> subsets(int[] nums) {
        this.results = new ArrayList<>();
        helper(nums, 0, new ArrayList<>());
        return results;
    }

    private void helper(int[] nums, int index, List<Integer> path) {
        // base case
        
        if (index == nums.length) {
            results.add(new ArrayList<>(path));
            return;
        }

        // logic
        // choose
        path.add(nums[index]);
        helper(nums, index+1, path);
        path.remove(path.size() -1);

        // not choose
        helper(nums, index+1, path);
    }
}

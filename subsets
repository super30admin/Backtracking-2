class Solution {
     List<List<Integer>> result;
    public List<List<Integer>> subsets(int[] nums) {
       result=new ArrayList<>();
        if(nums==null || nums.length==0) return result;
        helper(nums,0,new ArrayList<>());
        return result;
    }
   private void helper(int[] nums,int pivot,List<Integer> path){
       
      //base
      //logic
       result.add(new ArrayList<>(path));
       for(int i=pivot;i<nums.length;i++){
              if(i > pivot && nums[i] == nums[i-1]) continue; 
           //action
           path.add(nums[i]);
           //recurse
           helper(nums,i+1,path);
           //backtrack
           path.remove(path.size()-1);
       }
      
   
    }
}
class Solution {
    List<List<Integer>> result ;
    public List<List<Integer>> subsets(int[] nums) {
        result = new ArrayList<>();
        /* edge case */
        if( nums == null || nums.length == 0)
            return result;
        backtrack(nums,new ArrayList<>(),0); // back  track function
        return result;
    
    }
    
    private void backtrack(int[] nums, List<Integer> temp, int start)
    {
        result.add(new ArrayList<>(temp)); // add the temp list
        
        for( int i = start ; i < nums.length ;i++)
        {
            temp.add(nums[i]); // add item to list
            backtrack(nums,temp,i+1); // backtrack  increasing index by 1
            temp.remove(temp.size()-1); // remove the last added item
        }
    }
}
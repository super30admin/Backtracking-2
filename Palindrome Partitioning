class Solution:
    def partition(self, s: str) -> List[List[str]]:
        res = []
        a = []
        def b(i):
            if i >= len(s):
                res.append(a.copy())
                return
            for j in range(i, len(s)):
                if isPalindrome(s[i: j + 1]):
                    a.append(s[i: j + 1])
                    b(j + 1)
                    a.pop()
        b(0)
        return res
def isPalindrome(string):
    l = 0
    r = len(string) - 1
    while l <= r:
        if string[l] != string[r]:
            return False
        l += 1
        r -= 1
    return True

# Time Complexity: O(n * 2^n)
# Space Complexity: O(n)
# Successfully implemented on Leetcode

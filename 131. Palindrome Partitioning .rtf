{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;}
\margl1440\margr1440\vieww9680\viewh6580\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
class Solution:\
    result = []\
    def partition(self, s: str) -> List[List[str]]:\
        \
        self.result = []\
        \
        def isPalindrome(word):\
            \
            if word != word[::-1]:\
                return False\
            return True\
        \
        def helper(s, pivot, path):\
            #base case\
            if pivot == len(s):\
                li = list(path)\
                self.result.append(li)\
            \
            #logic\
            for i in range(pivot, len(s)):\
                sub = s[pivot: i+1]\
                if isPalindrome(sub):\
                    path.append(sub)\
                    helper(s, i + 1, path)\
                    path.pop()\
            \
        helper(s, 0, [])\
        return self.result}
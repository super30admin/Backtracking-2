# Subsets

#Tc: O(2^N)
#Sc: O(2^N)

class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        def backtrack(start, path):
            result.append(path)
            # Explore all possible subsets that can be formed by adding elements after the 'start' index
            for i in range(start, len(nums)):
                backtrack(i + 1, path + [nums[i]])

        result = []
        backtrack(0, [])
        return result

# Example usage:
sol = Solution()
print(sol.subsets([1, 2, 3]))  # Output: [[], [1], [1, 2], [1, 2, 3], [1, 3], [2], [2, 3], [3]]
print(sol.subsets([0]))         # Output: [[], [0]]
